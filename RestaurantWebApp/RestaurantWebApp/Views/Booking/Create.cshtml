@model RestaurantWebApp.DataTransferObject.ReservationDTO

@{
    ViewBag.Title = "Bordbestilling";
}
<h2>Bordbestilling</h2>
<hr />
@section Styles {
    @Styles.Render("~/Content/createView")
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.10.4/themes/dot-luv/jquery-ui.css" rel="stylesheet" type="text/css">
}

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReservationTime, new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ReservationTime, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ReservationTime, "", new { @class = "text-danger" })

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.Tables, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <select name="Tables" id="Tables2" class="form-control" multiple>
                                        @if (Model.Tables != null)
                                        {
                                            foreach (var x in Model.Tables)
                                            {
                                                <option value="@x.Id">Bord: @x.TableNumber </option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>*@


                        @*@Html.DropDownListFor(m => m.TimeSlots, new SelectList(Model.TimeSlots, "Date", "Time"), "Vælg tidspunkt", new { @class = "form-control" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NoOfPeople, new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NoOfPeople, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NoOfPeople, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Tables, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select name="Tables" id="Tables2" class="form-control" multiple>
                            @if (Model.Tables != null)
                            {
                                foreach (var x in Model.Tables)
                                {
                                    <option value="@x.Id">Bord: @x.TableNumber </option>
                                }
                            }
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Deposit, "Depositum", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Deposit)
                            @Html.ValidationMessageFor(model => model.Deposit, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Note, new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.OrderingFood, "Vil du bestille mad med til din reservation?", new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.OrderingFood, new { @class = "form-control", id = "check", onclick = "myFunction()" })
                            <p id="checkText" style="display: none">Der er valgt der skal bestilles mad</p>
                            @Html.ValidationMessageFor(model => model.OrderingFood, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Phone, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Email, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.FirstName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.LastName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Address, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.ZipCode, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.City, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Customer.City, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="w-100"></div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <!--<a href="/Booking/OrderFood" class="btn btn-primary">
                    Bestil Mad-->
                @* //TODO Mangler implmentation *@
                <!--</a>-->
                <input type="submit" value="Gem og afslut" class="btn btn-primary" />
            </div>
        </div>

        <div>
            @Html.ValidationSummary()
        </div>
    }
</div>

<div>
    @Html.ActionLink("Gå til forside", "Index")
</div>

@section Scripts {
    @*//TODO for dette virker skal valdiation slået fra , der en fejl i opsetning der gør man ikke kan komme vidre fordi den mener dette ikke er en vaild date i reservation time.*@
    @*@Scripts.Render("~/bundles/jqueryval")*@
    @Scripts.Render("~/bundles/jqueryui")


    <script>
        $(document).on('input',
            '#ReservationTime',
            function() {
                console.log($('#ReservationTime').val());
            });


        function search(source, name) {
            var results = [];
            var index;
            var entry;

            name = name.toUpperCase();
            for (index = 0; index < source.length; ++index) {
                entry = source[index];
                if (entry && entry.name && entry.name.toUpperCase().indexOf(name) !== -1) {
                    results.push(entry);
                }
            }

            return results;
        }
    </script>

    <script>
        var obj;
        $(document).ready(function() {
            $('#ReservationTime').change(function() {
                //this.value.format('mm-dd-yyyy');
                var date = this.value;
                var d1 = new Date(date).toLocaleDateString("en-US").split("/");
                //alert(date);
                //alert(d1);
                var $form = $(this),
                    term = $form.find("input[name='ReservationTime']").val(),
                    url = "https://localhost:44386/api/Reservation/timeSlot/" + d1;

                var get = $.getJSON(url, function(data) {
                    console.log(typeof data);
                });
                get.done(function (data) {
                    //alert("next");
                    console.log(typeof data);
                    obj = data;


                    console.log(data[1]);
                    console.log(JSON.stringify(obj));
                    //var results =data;
                    //var searchField = "openings";
                    //var searchVal = "my Name";
                    //for (var i=0 ; i < obj.list.length ; i++)
                    //{
                    //    if (obj.list[i][searchField] == searchVal) {
                    //        results.push(obj.list[i]);
                    //    }
                    //}

                    var content = $(data).find("#content");
                    $("#result").empty().append(content);
                });
            });
        });

        //selectedDate = document.getElementById("ReservationTime").value,
        //$("#searchForm").submit(function(event) {
        //    event.preventDefault();

        //    var $form = $(this),
        //        term = $form.find("input[name='ReservationTime']").val(),
        //        url = $form.attr("/Reservation/timeSlot/" + term);

        //});


        //$.ajax({
        //    type: "POST",
        //    url: "https://localhost:44386/api/User/Authenticate",
        //    dataType: 'application/json',
        //    data: selectedDate,
        //    success: function (data) {
        //        console.log('Submission was a suc.');
        //        console.log(data);


        //    },
        //    error: function (data) {
        //        console.log('Submission was a fail.');
        //        console.log(data);
        //        alert("prøv en and dato");
        //    }

        //});


    </script>


    <script>

        $(function() {

            $("#ReservationTime").datepicker({
                autoHide: true,
                autoPick: true,
                format: "mm/dd/yyyy",
                language: '',
                maxDate: '+3m +15d',
                minDate: 0
            });
        });

        //dateFormat: "dd-mm-yy",
        function myFunction() {
            // Get the checkbox
            var checkBox = document.getElementById("check");
            // Get the output text
            var text = document.getElementById("checkText");

            // If the checkbox is checked, display the output text
            if (checkBox.checked == true) {
                text.style.display = "block";
            } else {
                text.style.display = "none";
            }
        }

    </script>
}
