@model RestaurantWebApp.DataTransferObject.ReservationDTO

@{
    ViewBag.Title = "Bordbestilling";
}
<h2>Bordbestilling</h2>
<hr/>
@Styles.Render("~/Content/createView")

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReservationTime, new {@class = "control-label col-md-5"})
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ReservationTime, new {type = "date", @class = "form-control datepicker", id = "txtDate", name = "date"})
                        @Html.ValidationMessageFor(model => model.ReservationTime, "", new {@class = "text-danger"})

                        @Html.DropDownListFor(m => m.TimeSlots, new SelectList(Model.TimeSlots, "Date", "Time"), "Vælg tidspunkt", new {@class = "form-control"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NoOfPeople, new {@class = "control-label col-md-5"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NoOfPeople, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.NoOfPeople, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Tables, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        <select name="Tables" id="Tables2" class="form-control" multiple>
                            @if (Model.Tables != null)
                            {
                                foreach (var x in Model.Tables)
                                {
                                    <option value="@x.Id">Bord: @x.TableNumber </option>
                                }
                            }
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Deposit, "Depositum", new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Deposit)
                            @Html.ValidationMessageFor(model => model.Deposit, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Note, new {@class = "control-label col-md-5"})
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Note, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Note, "", new {@class = "text-danger"})
                    </div>

                    @Html.LabelFor(model => model.OrderingFood, "Vil du bestille mad med til din reservation?", new {@class = "control-label col-md-5"})
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.OrderingFood, new {@class = "form-control", id = "check", onclick = "myFunction()"})
                            <p id="checkText" style="display: none">Der er valgt der skal bestilles mad</p>
                            @Html.ValidationMessageFor(model => model.OrderingFood, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>

            <div class="col">
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Phone, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Phone, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.Phone, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Email, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Email, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.Email, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.FirstName, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.FirstName, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.LastName, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.LastName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.LastName, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.Address, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.Address, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.Address, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.ZipCode, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.ZipCode, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.ZipCode, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Customer.City, new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Customer.City, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Customer.City, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        </div>
        <div class="w-100"></div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="/Booking/OrderFood" class="btn btn-primary">
                    Bestil Mad
                    @* //TODO Mangler implmentation *@
                </a>
                <input type="submit" value="Gem og afslut" class="btn btn-primary"/>
            </div>
        </div>

        <div>
            @Html.ValidationSummary()
        </div>
    }
</div>

<div>
    @Html.ActionLink("Gå til forside", "Index")
</div>
@* used for clientside validation through jquery validation and jquery validation unobtrusive libs  *@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document).ready(function() {

            $('#datepicker').datepicker({
                dateFormat: "yy-mm-dd",
                maxDate: '+1m +10d',
                minDate: -10

            });

        });

        function myFunction() {
            // Get the checkbox
            var checkBox = document.getElementById("check");
            // Get the output text
            var text = document.getElementById("checkText");

            // If the checkbox is checked, display the output text
            if (checkBox.checked == true) {
                text.style.display = "block";
            } else {
                text.style.display = "none";
            }
        }

    </script>
}