@model RestaurantWebApp.DataTransferObject.UserDTO

@{
    ViewBag.Title = "Login";
}

<div class="row justify-content-md-center">
    <div class="col-md-10">
        <div class="card">
            <div class="card-header">
                Login
            </div>
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.LabelFor(m => m.Customer.Email)
                        @Html.TextBoxFor(m => m.Customer.Email, "", new { @class = "form-control", @id = "Email", @placeholder = "Email" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password)
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = "Password", @placeholder = "Password" })
                    </div>
                    <div class="form-group">
                        @* //TODO mangler bedre implemtions *@
                        <a href="/Booking/Register" class="btn btn-primary">Opret login</a>
                        <input type="submit" name="submit" class="btn btn-primary" value="Login" />
                        <button class="btn btn-primary" onclick="sendData();">fddfdsf</button>
                        <input id="clickMe" type="button" value="clickme" onclick="sendData();" />

                    </div>
                }
            </div>
        </div>
    </div>
</div>

@* used for clientside validation through jquery validation and jquery validation unobtrusive libs  *@
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function sendData() {
            var formData = new FormData();
            var loginData = {
                username: "test",
                password: "dsdsdsdsdsd",
                role: "Customer"
            };
            
            var lData = {"username": "string", "password": "string", "role": "Customer"};
            //var obj = JSON.parse(lData);
            console.log(lData);

            $.ajax({
                type: "POST",
                url: "https://localhost:44386/api/User/Authenticate",
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(lData),
                success: function (result) {
                    console.log('Submission was a suc.');
                    console.log(result);
                    self.user(data.userName);
                    // Cache the access token in session storage.
                    sessionStorage.setItem(tokenKey, data.access_token);
                },
                error: function (data) {
                    console.log('Submission was a fail.');
                    console.log(data);
                }
            });

        }
    </script>

}