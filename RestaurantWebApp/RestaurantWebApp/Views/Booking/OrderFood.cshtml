@model Tuple<RestaurantWebApp.DataTransferObject.OrderDTO, RestaurantWebApp.Model.FoodViewModel>
@using (Html.BeginForm())
{
    ViewBag.Title = "Madbestilling";
}

<h2>Madbestilling</h2>

<div class="form-horizontal">
    <div class="form-group">

        <div class="col-md-5 float-left">
            <label>Retter</label>
            @Html.ListBoxFor(model => model.Item2.Foods, new SelectList(Model.Item2.Foods, "Id", "Name"), new { Id="foodList", style = "width:100%" })

            <button onclick="AddFoods()" > vælg mad</button>
            @*<input type="button" onclick="addFoods()" value="Vælg ret/retter" />*@
        </div>
        <div class="col-md-5 float-right">
            <label> Drikkevarer</label>
            @Html.ListBoxFor(model => model.Item2.Drinks, new SelectList(Model.Item2.Drinks, "Id", "Name"),new { @class = "control - label" })
            <input type="button" value="Vælg drikkevarer" />
        </div>
        <div id="summaryDiv" class="col-md-12 float-left">
            @Html.ListBoxFor(model => model.Item1.Foods, new SelectList(Model.Item1.Foods, "Id", "Name"), new { Id="summaryList", style = "width:100%"})
            <input id="RemoveFromSummaryList" type="button" accept="removeFoods" value="Fjern ret/retter" />
        </div>
    </div>
</div>


<div>
    <input type="submit" value="Gem mad og drikke " class="btn btn-primary" />
</div>


<script>
    var foodList = document.getElementById("foodList");
    function AddFoods() {
        var x = foodList.selectedItem();
    var foods = @Model.Item2;
    var summaryList = @Model.Item1.Foods;
    var selected = foodList.selectedItem;
    summaryList.Add(selected);
        var r = 1 + 1;

    }


    function removeFoods() {
        var foods = @Model.Item2;
        var summaryList = @Model.Item1.Foods;
        var selected = summaryList.selectedItem;
        summaryList.Remove(selected);

     }
</script>

